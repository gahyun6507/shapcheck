{"filter":false,"title":"SystemLogChart.js","tooltip":"/face3/src/components/SystemLogChart.js","undoManager":{"mark":42,"position":42,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["import React from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const data = {","  labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차','8주차'],","  datasets: [","    {","      label: '접속 수',","      data: [12, 19, 3, 5, 2, 3, 9, 7,5],","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    },","  ],","};","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","function SystemLogChart() {","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":133}],[{"start":{"row":0,"column":0},"end":{"row":66,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(8).fill(0); // 8주차까지 초기화","","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const weekNumber = Math.floor((date.getDate() - 1) / 7); // 해당 달의 몇 주차인지 계산","    if (weekNumber >= 0 && weekNumber < 8) {","      weeks[weekNumber] += 1; // 해당 주차에 해당하는 데이터를 증가","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":134}],[{"start":{"row":0,"column":0},"end":{"row":66,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(8).fill(0); // 8주차까지 초기화","","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const weekNumber = Math.floor((date.getDate() - 1) / 7); // 해당 달의 몇 주차인지 계산","    if (weekNumber >= 0 && weekNumber < 8) {","      weeks[weekNumber] += 1; // 해당 주차에 해당하는 데이터를 증가","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":135}],[{"start":{"row":0,"column":0},"end":{"row":66,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 12주차까지 초기화","","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const weekNumber = Math.floor((date.getDate() - 1) / 7); // 해당 달의 몇 주차인지 계산","    if (weekNumber >= 0 && weekNumber < 12) {","      weeks[weekNumber] += 1; // 해당 주차에 해당하는 데이터를 증가","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":136}],[{"start":{"row":22,"column":0},"end":{"row":34,"column":2},"action":"remove","lines":["const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 12주차까지 초기화","","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const weekNumber = Math.floor((date.getDate() - 1) / 7); // 해당 달의 몇 주차인지 계산","    if (weekNumber >= 0 && weekNumber < 12) {","      weeks[weekNumber] += 1; // 해당 주차에 해당하는 데이터를 증가","    }","  });","","  return weeks;","};"],"id":137}],[{"start":{"row":22,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const weekNumber = Math.floor((date.getDate() - 1) / 7); // 해당 달의 몇 주차인지 계산","","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};",""],"id":138}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":20},"action":"remove","lines":["// 주차별 데이터를 카운트하는 함수"],"id":139}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const weekNumber = Math.floor((date.getDate() - 1) / 7); // 해당 달의 몇 주차인지 계산","","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":140}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","  ","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);","    const daysSinceStart = Math.floor((date - firstDayOfMonth) / (1000 * 60 * 60 * 24));","    const weekNumber = Math.floor(daysSinceStart / 7); // 해당 달의 몇 번째 주인지 계산","    ","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":141}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","  ","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);","    const daysSinceStart = Math.floor((date - firstDayOfMonth) / (1000 * 60 * 60 * 24));","    const weekNumber = Math.floor(daysSinceStart / 7); // 해당 달의 몇 번째 주인지 계산","    ","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":142}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["import React from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const data = {","  labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차','8주차'],","  datasets: [","    {","      label: '접속 수',","      data: [12, 19, 3, 5, 2, 3, 9, 7,5],","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    },","  ],","};","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","function SystemLogChart() {","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":143}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["import React from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const data = {","  labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차','8주차'],","  datasets: [","    {","      label: '접속 수',","      data: [12, 19, 3, 5, 2, 3, 9, 7,5],","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    },","  ],","};","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","function SystemLogChart() {","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":144}],[{"start":{"row":0,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["import React, { useState, useEffect } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","// 1. 데이터 가공 함수 (주차별로 출석과 결석을 카운팅)","const processData = (attendanceData) => {","  const weekCounts = {","    1: { present: 0, absent: 0 },","    2: { present: 0, absent: 0 },","    3: { present: 0, absent: 0 },","    4: { present: 0, absent: 0 },","    5: { present: 0, absent: 0 },","    6: { present: 0, absent: 0 },","    7: { present: 0, absent: 0 },","    8: { present: 0, absent: 0 },","    9: { present: 0, absent: 0 },","    10: { present: 0, absent: 0 },","    11: { present: 0, absent: 0 },","    12: { present: 0, absent: 0 },","  };","","  attendanceData.forEach(entry => {","    const date = new Date(entry.date);","    const week = Math.ceil((date.getDate() + 1) / 7);  // 해당 날짜가 몇 주차인지 계산","    const isPresent = entry.attendance === '출석';","","    if (week >= 1 && week <= 12) { // 1주차부터 12주차까지 카운트","      if (isPresent) {","        weekCounts[week].present += 1;","      } else {","        weekCounts[week].absent += 1;","      }","    }","  });","","  return weekCounts;","};","","// 2. 주차별 데이터를 chart.js 형식으로 변환","const transformToChartData = (weekCounts) => {","  const labels = Object.keys(weekCounts).map(week => `${week}주차`);","  const presentData = labels.map(week => weekCounts[week].present);","  const absentData = labels.map(week => weekCounts[week].absent);","","  return {","    labels,","    datasets: [","      {","        label: '출석 수',","        data: presentData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","      {","        label: '결석 수',","        data: absentData,","        backgroundColor: 'rgba(255, 99, 132, 0.6)',","      },","    ],","  };","};","","// 3. 데이터베이스에서 출석 데이터 가져오는 함수 (fetch 예시)","const fetchAttendanceData = async () => {","  const response = await fetch('/api/attendance');  // 실제 API 엔드포인트로 변경 필요","  const data = await response.json();","  return data;","};","","const SystemLogChart = () => {","  const [chartData, setChartData] = useState(null);","","  useEffect(() => {","    const loadData = async () => {","      const data = await fetchAttendanceData();","      const weekCounts = processData(data); // 데이터 처리","      const chartData = transformToChartData(weekCounts); // 차트 데이터로 변환","      setChartData(chartData);","    };","","    loadData();","  }, []);","","  if (!chartData) {","    return <div>Loading...</div>;","  }","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={chartData} options={options} />","    </div>","  );","};","","export default SystemLogChart;",""],"id":145}],[{"start":{"row":0,"column":0},"end":{"row":112,"column":0},"action":"remove","lines":["import React, { useState, useEffect } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","// 1. 데이터 가공 함수 (주차별로 출석과 결석을 카운팅)","const processData = (attendanceData) => {","  const weekCounts = {","    1: { present: 0, absent: 0 },","    2: { present: 0, absent: 0 },","    3: { present: 0, absent: 0 },","    4: { present: 0, absent: 0 },","    5: { present: 0, absent: 0 },","    6: { present: 0, absent: 0 },","    7: { present: 0, absent: 0 },","    8: { present: 0, absent: 0 },","    9: { present: 0, absent: 0 },","    10: { present: 0, absent: 0 },","    11: { present: 0, absent: 0 },","    12: { present: 0, absent: 0 },","  };","","  attendanceData.forEach(entry => {","    const date = new Date(entry.date);","    const week = Math.ceil((date.getDate() + 1) / 7);  // 해당 날짜가 몇 주차인지 계산","    const isPresent = entry.attendance === '출석';","","    if (week >= 1 && week <= 12) { // 1주차부터 12주차까지 카운트","      if (isPresent) {","        weekCounts[week].present += 1;","      } else {","        weekCounts[week].absent += 1;","      }","    }","  });","","  return weekCounts;","};","","// 2. 주차별 데이터를 chart.js 형식으로 변환","const transformToChartData = (weekCounts) => {","  const labels = Object.keys(weekCounts).map(week => `${week}주차`);","  const presentData = labels.map(week => weekCounts[week].present);","  const absentData = labels.map(week => weekCounts[week].absent);","","  return {","    labels,","    datasets: [","      {","        label: '출석 수',","        data: presentData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","      {","        label: '결석 수',","        data: absentData,","        backgroundColor: 'rgba(255, 99, 132, 0.6)',","      },","    ],","  };","};","","// 3. 데이터베이스에서 출석 데이터 가져오는 함수 (fetch 예시)","const fetchAttendanceData = async () => {","  const response = await fetch('/api/attendance');  // 실제 API 엔드포인트로 변경 필요","  const data = await response.json();","  return data;","};","","const SystemLogChart = () => {","  const [chartData, setChartData] = useState(null);","","  useEffect(() => {","    const loadData = async () => {","      const data = await fetchAttendanceData();","      const weekCounts = processData(data); // 데이터 처리","      const chartData = transformToChartData(weekCounts); // 차트 데이터로 변환","      setChartData(chartData);","    };","","    loadData();","  }, []);","","  if (!chartData) {","    return <div>Loading...</div>;","  }","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={chartData} options={options} />","    </div>","  );","};","","export default SystemLogChart;",""],"id":146}],[{"start":{"row":0,"column":0},"end":{"row":126,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const fetchAttendanceData = async () => {","  try {","    const response = await fetch('/api/attendance'); // 실제 API 엔드포인트로 수정 필요","    const data = await response.json();","    console.log('API Response:', data); // API 응답 확인","    return data;","  } catch (error) {","    console.error('Error fetching attendance data:', error);","    return []; // 에러 발생 시 빈 배열 반환","  }","};","","const processData = (attendanceData = []) => {","  const weekCounts = {","    1: { present: 0, absent: 0 },","    2: { present: 0, absent: 0 },","    3: { present: 0, absent: 0 },","    4: { present: 0, absent: 0 },","    5: { present: 0, absent: 0 },","    6: { present: 0, absent: 0 },","    7: { present: 0, absent: 0 },","    8: { present: 0, absent: 0 },","    9: { present: 0, absent: 0 },","    10: { present: 0, absent: 0 },","    11: { present: 0, absent: 0 },","    12: { present: 0, absent: 0 },","  };","","  attendanceData.forEach(entry => {","    const date = new Date(entry.date);","    const week = Math.ceil((date.getDate() + 1) / 7);  // 해당 날짜가 몇 주차인지 계산","    const isPresent = entry.attendance === '출석';","","    if (week >= 1 && week <= 12) { // 1주차부터 12주차까지 카운트","      if (isPresent) {","        weekCounts[week].present += 1;","      } else {","        weekCounts[week].absent += 1;","      }","    }","  });","","  return weekCounts;","};","","const transformToChartData = (weekCounts) => {","  const weeks = Object.keys(weekCounts);","  const presentCounts = weeks.map(week => weekCounts[week].present);","  const absentCounts = weeks.map(week => weekCounts[week].absent);","","  return {","    labels: weeks.map(week => `${week}주차`),","    datasets: [","      {","        label: '출석 수',","        data: presentCounts,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","      {","        label: '결석 수',","        data: absentCounts,","        backgroundColor: 'rgba(255, 99, 132, 0.6)',","      },","    ],","  };","};","","function SystemLogChart() {","  const [chartData, setChartData] = useState(null);","","  useEffect(() => {","    const loadData = async () => {","      try {","        const data = await fetchAttendanceData();","        console.log('Fetched Data:', data); // 데이터를 확인","        const weekCounts = processData(data); // 데이터 처리","        const chartData = transformToChartData(weekCounts); // 차트 데이터로 변환","        console.log('Chart Data:', chartData); // 차트 데이터 확인","        setChartData(chartData); // 상태 업데이트","      } catch (error) {","        console.error('Error fetching data:', error);","      }","    };","","    loadData();","  }, []);","","  if (!chartData) {","    return (","      <div className=\"system-log-chart\">","        <h4>System Log</h4>","        <p>Loading...</p>","      </div>","    );","  }","","  const options = {","    responsive: true,","    maintainAspectRatio: false, // 비율 유지하지 않음","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={chartData} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":147}],[{"start":{"row":0,"column":0},"end":{"row":126,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const fetchAttendanceData = async () => {","  try {","    const response = await fetch('/api/attendance'); // 실제 API 엔드포인트로 수정 필요","    const data = await response.json();","    console.log('API Response:', data); // API 응답 확인","    return data;","  } catch (error) {","    console.error('Error fetching attendance data:', error);","    return []; // 에러 발생 시 빈 배열 반환","  }","};","","const processData = (attendanceData = []) => {","  const weekCounts = {","    1: { present: 0, absent: 0 },","    2: { present: 0, absent: 0 },","    3: { present: 0, absent: 0 },","    4: { present: 0, absent: 0 },","    5: { present: 0, absent: 0 },","    6: { present: 0, absent: 0 },","    7: { present: 0, absent: 0 },","    8: { present: 0, absent: 0 },","    9: { present: 0, absent: 0 },","    10: { present: 0, absent: 0 },","    11: { present: 0, absent: 0 },","    12: { present: 0, absent: 0 },","  };","","  attendanceData.forEach(entry => {","    const date = new Date(entry.date);","    const week = Math.ceil((date.getDate() + 1) / 7);  // 해당 날짜가 몇 주차인지 계산","    const isPresent = entry.attendance === '출석';","","    if (week >= 1 && week <= 12) { // 1주차부터 12주차까지 카운트","      if (isPresent) {","        weekCounts[week].present += 1;","      } else {","        weekCounts[week].absent += 1;","      }","    }","  });","","  return weekCounts;","};","","const transformToChartData = (weekCounts) => {","  const weeks = Object.keys(weekCounts);","  const presentCounts = weeks.map(week => weekCounts[week].present);","  const absentCounts = weeks.map(week => weekCounts[week].absent);","","  return {","    labels: weeks.map(week => `${week}주차`),","    datasets: [","      {","        label: '출석 수',","        data: presentCounts,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","      {","        label: '결석 수',","        data: absentCounts,","        backgroundColor: 'rgba(255, 99, 132, 0.6)',","      },","    ],","  };","};","","function SystemLogChart() {","  const [chartData, setChartData] = useState(null);","","  useEffect(() => {","    const loadData = async () => {","      try {","        const data = await fetchAttendanceData();","        console.log('Fetched Data:', data); // 데이터를 확인","        const weekCounts = processData(data); // 데이터 처리","        const chartData = transformToChartData(weekCounts); // 차트 데이터로 변환","        console.log('Chart Data:', chartData); // 차트 데이터 확인","        setChartData(chartData); // 상태 업데이트","      } catch (error) {","        console.error('Error fetching data:', error);","      }","    };","","    loadData();","  }, []);","","  if (!chartData) {","    return (","      <div className=\"system-log-chart\">","        <h4>System Log</h4>","        <p>Loading...</p>","      </div>","    );","  }","","  const options = {","    responsive: true,","    maintainAspectRatio: false, // 비율 유지하지 않음","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={chartData} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":148}],[{"start":{"row":0,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["import React, { useState, useEffect } from 'react';","import { Line } from 'react-chartjs-2';","import { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';","","// Chart.js 설정","ChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({});","  const [loading, setLoading] = useState(true);","","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch('/api/attendance'); // API 엔드포인트 확인","      const text = await response.text();  // 응답 텍스트로 받아서 로그에 출력","      console.log(\"Response Text:\", text);  // 실제 응답 내용 출력","","      // JSON 형식이 아니면 에러 처리","      if (response.ok && text.startsWith(\"{\")) {","        const data = JSON.parse(text);  // JSON으로 변환","        setAttendanceData(data); // 받은 데이터 설정","      } else {","        throw new Error(\"Response is not in valid JSON format\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 에러 발생 시 빈 배열로 설정","    }","  };","","  const transformToChartData = (data) => {","    const labels = [];","    const attendanceCounts = [];","","    // 데이터를 기반으로 라벨과 차트 데이터를 준비","    data.forEach(item => {","      labels.push(item.week);  // 주차","      attendanceCounts.push(item.attendanceCount);  // 출석 수","    });","","    return {","      labels: labels,","      datasets: [","        {","          label: '접속 수',","          data: attendanceCounts,","          backgroundColor: 'rgba(75, 192, 192, 0.6)',","        },","      ],","    };","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      const chartData = transformToChartData(attendanceData);","      setChartData(chartData);","      setLoading(false);  // 데이터 로딩 완료","    }","  }, [attendanceData]);","","  return (","    <div>","      {loading ? (","        <div>Loading...</div>","      ) : (","        <div>","          <Line data={chartData} />","        </div>","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":149}],[{"start":{"row":0,"column":0},"end":{"row":79,"column":0},"action":"remove","lines":["import React, { useState, useEffect } from 'react';","import { Line } from 'react-chartjs-2';","import { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';","","// Chart.js 설정","ChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({});","  const [loading, setLoading] = useState(true);","","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch('/api/attendance'); // API 엔드포인트 확인","      const text = await response.text();  // 응답 텍스트로 받아서 로그에 출력","      console.log(\"Response Text:\", text);  // 실제 응답 내용 출력","","      // JSON 형식이 아니면 에러 처리","      if (response.ok && text.startsWith(\"{\")) {","        const data = JSON.parse(text);  // JSON으로 변환","        setAttendanceData(data); // 받은 데이터 설정","      } else {","        throw new Error(\"Response is not in valid JSON format\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 에러 발생 시 빈 배열로 설정","    }","  };","","  const transformToChartData = (data) => {","    const labels = [];","    const attendanceCounts = [];","","    // 데이터를 기반으로 라벨과 차트 데이터를 준비","    data.forEach(item => {","      labels.push(item.week);  // 주차","      attendanceCounts.push(item.attendanceCount);  // 출석 수","    });","","    return {","      labels: labels,","      datasets: [","        {","          label: '접속 수',","          data: attendanceCounts,","          backgroundColor: 'rgba(75, 192, 192, 0.6)',","        },","      ],","    };","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      const chartData = transformToChartData(attendanceData);","      setChartData(chartData);","      setLoading(false);  // 데이터 로딩 완료","    }","  }, [attendanceData]);","","  return (","    <div>","      {loading ? (","        <div>Loading...</div>","      ) : (","        <div>","          <Line data={chartData} />","        </div>","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":150}],[{"start":{"row":0,"column":0},"end":{"row":92,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Pie } from 'react-chartjs-2';","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';","","// Chart.js 등록","ChartJS.register(ArcElement, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: [],","    datasets: [{","      label: 'Attendance Data',","      data: [],","      backgroundColor: ['#FF5733', '#33FF57', '#3357FF'],","      borderColor: ['#FF5733', '#33FF57', '#3357FF'],","      borderWidth: 1,","    }],","  });","","  // Attendance 데이터 불러오기","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch('/api/attendance');","      const text = await response.text(); // 응답을 텍스트로 받아옴","","      console.log(\"Response Text:\", text); // 응답 텍스트 확인","","      // 응답이 JSON 형식이 아니면 오류 처리","      if (response.ok && text.trim().startsWith(\"{\")) {","        const data = JSON.parse(text); // JSON으로 파싱","        setAttendanceData(data); // 상태에 데이터를 저장","      } else {","        throw new Error(\"Response is not in valid JSON format\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","    }","  };","","  // 차트 데이터 업데이트","  const loadData = () => {","    const labels = ['출석', '결석', '지각'];","    const data = [0, 0, 0];","","    // 출석 데이터를 기반으로 값 계산","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        data[0] += 1;","      } else if (attendance.attendance === '결석') {","        data[1] += 1;","      } else if (attendance.attendance === '지각') {","        data[2] += 1;","      }","    });","","    setChartData((prevState) => ({","      ...prevState,","      labels: labels,","      datasets: [{","        ...prevState.datasets[0],","        data: data,","      }],","    }));","  };","","  // 컴포넌트가 마운트 될 때 데이터 불러오기","  useEffect(() => {","    fetchAttendanceData(); // 데이터 불러오기","  }, []);","","  // 데이터를 받은 후 차트 데이터 설정","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadData(); // 데이터 로드 후 차트 업데이트","    }","  }, [attendanceData]);","","  return (","    <div>","      <h2>출석 통계</h2>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Pie data={chartData} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":151}],[{"start":{"row":23,"column":51},"end":{"row":23,"column":52},"action":"remove","lines":["'"],"id":152},{"start":{"row":23,"column":50},"end":{"row":23,"column":51},"action":"remove","lines":["e"]},{"start":{"row":23,"column":49},"end":{"row":23,"column":50},"action":"remove","lines":["c"]},{"start":{"row":23,"column":48},"end":{"row":23,"column":49},"action":"remove","lines":["n"]},{"start":{"row":23,"column":47},"end":{"row":23,"column":48},"action":"remove","lines":["a"]},{"start":{"row":23,"column":46},"end":{"row":23,"column":47},"action":"remove","lines":["d"]},{"start":{"row":23,"column":45},"end":{"row":23,"column":46},"action":"remove","lines":["n"]},{"start":{"row":23,"column":44},"end":{"row":23,"column":45},"action":"remove","lines":["e"]},{"start":{"row":23,"column":43},"end":{"row":23,"column":44},"action":"remove","lines":["t"]},{"start":{"row":23,"column":42},"end":{"row":23,"column":43},"action":"remove","lines":["t"]},{"start":{"row":23,"column":41},"end":{"row":23,"column":42},"action":"remove","lines":["a"]},{"start":{"row":23,"column":40},"end":{"row":23,"column":41},"action":"remove","lines":["/"]}],[{"start":{"row":23,"column":39},"end":{"row":23,"column":40},"action":"remove","lines":["i"],"id":153},{"start":{"row":23,"column":38},"end":{"row":23,"column":39},"action":"remove","lines":["p"]},{"start":{"row":23,"column":37},"end":{"row":23,"column":38},"action":"remove","lines":["a"]},{"start":{"row":23,"column":36},"end":{"row":23,"column":37},"action":"remove","lines":["/"]},{"start":{"row":23,"column":35},"end":{"row":23,"column":36},"action":"remove","lines":["'"]}],[{"start":{"row":23,"column":35},"end":{"row":23,"column":77},"action":"insert","lines":["\"http://18.116.93.222:8000/api/attendance\""],"id":154}],[{"start":{"row":21,"column":0},"end":{"row":39,"column":4},"action":"remove","lines":["  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","      const text = await response.text(); // 응답을 텍스트로 받아옴","","      console.log(\"Response Text:\", text); // 응답 텍스트 확인","","      // 응답이 JSON 형식이 아니면 오류 처리","      if (response.ok && text.trim().startsWith(\"{\")) {","        const data = JSON.parse(text); // JSON으로 파싱","        setAttendanceData(data); // 상태에 데이터를 저장","      } else {","        throw new Error(\"Response is not in valid JSON format\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","    }","  };"],"id":155}],[{"start":{"row":21,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["const fetchAttendanceData = async () => {","  try {","    const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","","    // 응답이 정상적으로 왔는지 확인","    if (response.ok) {","      const data = await response.json(); // 바로 JSON으로 파싱","","      console.log(\"Attendance Data:\", data); // 데이터 확인용 로그","","      setAttendanceData(data); // 상태에 데이터를 저장","    } else {","      throw new Error(\"Failed to fetch attendance data\");","    }","  } catch (error) {","    console.error('Error fetching attendance data:', error);","    setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","  }","};",""],"id":156}],[{"start":{"row":0,"column":0},"end":{"row":93,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Pie } from 'react-chartjs-2';","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';","","// Chart.js 등록","ChartJS.register(ArcElement, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: [],","    datasets: [{","      label: 'Attendance Data',","      data: [],","      backgroundColor: ['#FF5733', '#33FF57', '#3357FF'],","      borderColor: ['#FF5733', '#33FF57', '#3357FF'],","      borderWidth: 1,","    }],","  });","","  // Attendance 데이터 불러오기","const fetchAttendanceData = async () => {","  try {","    const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","","    // 응답이 정상적으로 왔는지 확인","    if (response.ok) {","      const data = await response.json(); // 바로 JSON으로 파싱","","      console.log(\"Attendance Data:\", data); // 데이터 확인용 로그","","      setAttendanceData(data); // 상태에 데이터를 저장","    } else {","      throw new Error(\"Failed to fetch attendance data\");","    }","  } catch (error) {","    console.error('Error fetching attendance data:', error);","    setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","  }","};","","","  // 차트 데이터 업데이트","  const loadData = () => {","    const labels = ['출석', '결석', '지각'];","    const data = [0, 0, 0];","","    // 출석 데이터를 기반으로 값 계산","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        data[0] += 1;","      } else if (attendance.attendance === '결석') {","        data[1] += 1;","      } else if (attendance.attendance === '지각') {","        data[2] += 1;","      }","    });","","    setChartData((prevState) => ({","      ...prevState,","      labels: labels,","      datasets: [{","        ...prevState.datasets[0],","        data: data,","      }],","    }));","  };","","  // 컴포넌트가 마운트 될 때 데이터 불러오기","  useEffect(() => {","    fetchAttendanceData(); // 데이터 불러오기","  }, []);","","  // 데이터를 받은 후 차트 데이터 설정","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadData(); // 데이터 로드 후 차트 업데이트","    }","  }, [attendanceData]);","","  return (","    <div>","      <h2>출석 통계</h2>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Pie data={chartData} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":157}],[{"start":{"row":0,"column":0},"end":{"row":106,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","  ","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);","    const daysSinceStart = Math.floor((date - firstDayOfMonth) / (1000 * 60 * 60 * 24));","    const weekNumber = Math.floor(daysSinceStart / 7); // 해당 달의 몇 번째 주인지 계산","    ","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [{","      label: '출석 수',","      data: Array(12).fill(0), // 초기 데이터는 모두 0","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    }],","  });","","  // 출석 데이터 불러오기","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","","      // 응답이 정상적으로 왔는지 확인","      if (response.ok) {","        const data = await response.json(); // 바로 JSON으로 파싱","        console.log(\"Attendance Data:\", data); // 데이터 확인용 로그","        setAttendanceData(data); // 상태에 데이터를 저장","      } else {","        throw new Error(\"Failed to fetch attendance data\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","    }","  };","","  // 주차별 출석 데이터 설정","  const loadData = () => {","    const weeklyCounts = calculateWeeklyData(attendanceData);","    setChartData((prevState) => ({","      ...prevState,","      datasets: [{","        ...prevState.datasets[0],","        data: weeklyCounts,  // 주차별 출석 데이터를 업데이트","      }],","    }));","  };","","  // 컴포넌트가 마운트 될 때 데이터 불러오기","  useEffect(() => {","    fetchAttendanceData(); // 데이터 불러오기","  }, []);","","  // 데이터를 받은 후 차트 데이터 설정","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadData(); // 데이터 로드 후 차트 업데이트","    }","  }, [attendanceData]);","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":158}],[{"start":{"row":0,"column":0},"end":{"row":106,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","  ","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);","    const daysSinceStart = Math.floor((date - firstDayOfMonth) / (1000 * 60 * 60 * 24));","    const weekNumber = Math.floor(daysSinceStart / 7); // 해당 달의 몇 번째 주인지 계산","    ","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [{","      label: '출석 수',","      data: Array(12).fill(0), // 초기 데이터는 모두 0","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    }],","  });","","  // 출석 데이터 불러오기","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","","      // 응답이 정상적으로 왔는지 확인","      if (response.ok) {","        const data = await response.json(); // 바로 JSON으로 파싱","        console.log(\"Attendance Data:\", data); // 데이터 확인용 로그","        setAttendanceData(data); // 상태에 데이터를 저장","      } else {","        throw new Error(\"Failed to fetch attendance data\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","    }","  };","","  // 주차별 출석 데이터 설정","  const loadData = () => {","    const weeklyCounts = calculateWeeklyData(attendanceData);","    setChartData((prevState) => ({","      ...prevState,","      datasets: [{","        ...prevState.datasets[0],","        data: weeklyCounts,  // 주차별 출석 데이터를 업데이트","      }],","    }));","  };","","  // 컴포넌트가 마운트 될 때 데이터 불러오기","  useEffect(() => {","    fetchAttendanceData(); // 데이터 불러오기","  }, []);","","  // 데이터를 받은 후 차트 데이터 설정","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadData(); // 데이터 로드 후 차트 업데이트","    }","  }, [attendanceData]);","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":159}],[{"start":{"row":0,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import { Chart as ChartJS, CategoryScale, BarElement, Title, Tooltip, Legend } from 'chart.js';","","// Chart.js 등록","ChartJS.register(CategoryScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [{","      label: '출석 통계',","      data: [0, 0, 0],","      backgroundColor: ['#4CAF50', '#FF5722', '#FFEB3B'], // 막대 그래프 색상","      borderColor: ['#388E3C', '#F44336', '#FBC02D'],","      borderWidth: 1,","    }],","  });","","  // Attendance 데이터 불러오기","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","","      // 응답이 정상적으로 왔는지 확인","      if (response.ok) {","        const data = await response.json(); // 바로 JSON으로 파싱","        console.log(\"Attendance Data:\", data); // 데이터 확인용 로그","        setAttendanceData(data); // 상태에 데이터를 저장","      } else {","        throw new Error(\"Failed to fetch attendance data\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","    }","  };","","  // 차트 데이터 업데이트","  const loadData = () => {","    const data = [0, 0, 0]; // 출석, 결석, 지각","","    // 출석 데이터를 기반으로 값 계산","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        data[0] += 1;","      } else if (attendance.attendance === '결석') {","        data[1] += 1;","      } else if (attendance.attendance === '지각') {","        data[2] += 1;","      }","    });","","    // 차트 데이터 설정","    setChartData((prevState) => ({","      ...prevState,","      datasets: [{","        ...prevState.datasets[0],","        data: data,","      }],","    }));","  };","","  // 컴포넌트가 마운트 될 때 데이터 불러오기","  useEffect(() => {","    fetchAttendanceData(); // 데이터 불러오기","  }, []);","","  // attendanceData 변경 시 차트 데이터 업데이트","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadData(); // 데이터 로드 후 차트 업데이트","    }","  }, [attendanceData]);","","  return (","    <div>","      <h2>출석 통계</h2>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":160}],[{"start":{"row":0,"column":0},"end":{"row":89,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import { Chart as ChartJS, CategoryScale, BarElement, Title, Tooltip, Legend } from 'chart.js';","","// Chart.js 등록","ChartJS.register(CategoryScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [{","      label: '출석 통계',","      data: [0, 0, 0],","      backgroundColor: ['#4CAF50', '#FF5722', '#FFEB3B'], // 막대 그래프 색상","      borderColor: ['#388E3C', '#F44336', '#FBC02D'],","      borderWidth: 1,","    }],","  });","","  // Attendance 데이터 불러오기","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(\"http://18.116.93.222:8000/api/attendance\");","","      // 응답이 정상적으로 왔는지 확인","      if (response.ok) {","        const data = await response.json(); // 바로 JSON으로 파싱","        console.log(\"Attendance Data:\", data); // 데이터 확인용 로그","        setAttendanceData(data); // 상태에 데이터를 저장","      } else {","        throw new Error(\"Failed to fetch attendance data\");","      }","    } catch (error) {","      console.error('Error fetching attendance data:', error);","      setAttendanceData([]);  // 오류 발생 시 빈 배열로 설정","    }","  };","","  // 차트 데이터 업데이트","  const loadData = () => {","    const data = [0, 0, 0]; // 출석, 결석, 지각","","    // 출석 데이터를 기반으로 값 계산","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        data[0] += 1;","      } else if (attendance.attendance === '결석') {","        data[1] += 1;","      } else if (attendance.attendance === '지각') {","        data[2] += 1;","      }","    });","","    // 차트 데이터 설정","    setChartData((prevState) => ({","      ...prevState,","      datasets: [{","        ...prevState.datasets[0],","        data: data,","      }],","    }));","  };","","  // 컴포넌트가 마운트 될 때 데이터 불러오기","  useEffect(() => {","    fetchAttendanceData(); // 데이터 불러오기","  }, []);","","  // attendanceData 변경 시 차트 데이터 업데이트","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadData(); // 데이터 로드 후 차트 업데이트","    }","  }, [attendanceData]);","","  return (","    <div>","      <h2>출석 통계</h2>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":161}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","  ","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);","    const daysSinceStart = Math.floor((date - firstDayOfMonth) / (1000 * 60 * 60 * 24));","    const weekNumber = Math.floor(daysSinceStart / 7); // 해당 달의 몇 번째 주인지 계산","    ","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":162}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 차트 필수 요소 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","// 주차별 데이터를 카운트하는 함수","const calculateWeeklyData = (dbData) => {","  const weeks = Array(12).fill(0); // 최대 12주까지의 데이터를 준비","  ","  dbData.forEach((record) => {","    const date = new Date(record.date);","    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);","    const daysSinceStart = Math.floor((date - firstDayOfMonth) / (1000 * 60 * 60 * 24));","    const weekNumber = Math.floor(daysSinceStart / 7); // 해당 달의 몇 번째 주인지 계산","    ","    if (weekNumber >= 0 && weekNumber < weeks.length) {","      weeks[weekNumber] += 1; // 주차별 출석 데이터를 카운트","    }","  });","","  return weeks;","};","","function SystemLogChart({ dbData }) {","  const [weeklyData, setWeeklyData] = useState([]);","","  useEffect(() => {","    if (dbData) {","      const weeklyCounts = calculateWeeklyData(dbData);","      setWeeklyData(weeklyCounts);","    }","  }, [dbData]);","","  const data = {","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차', '9주차', '10주차', '11주차', '12주차'],","    datasets: [","      {","        label: '접속 수',","        data: weeklyData,","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":163}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["import React from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const data = {","  labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차','8주차'],","  datasets: [","    {","      label: '접속 수',","      data: [12, 19, 3, 5, 2, 3, 9, 7,5],","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    },","  ],","};","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","function SystemLogChart() {","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":164}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["import React from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const data = {","  labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차','8주차'],","  datasets: [","    {","      label: '접속 수',","      data: [12, 19, 3, 5, 2, 3, 9, 7,5],","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    },","  ],","};","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","function SystemLogChart() {","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":165}],[{"start":{"row":0,"column":0},"end":{"row":96,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0, 0, 0, 0, 0, 0], // 초기에 0으로 설정","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    // 여기서는 예시로 직접 데이터를 사용합니다.","    const data = [","      { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","      { attendance: '출석' }, { attendance: '결석' }, { attendance: '결석' },","      { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","      { attendance: '출석' },","    ];","    setAttendanceData(data);","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","        },","      ],","    });","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":166}],[{"start":{"row":0,"column":0},"end":{"row":96,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0, 0, 0, 0, 0, 0], // 초기에 0으로 설정","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    // 여기서는 예시로 직접 데이터를 사용합니다.","    const data = [","      { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","      { attendance: '출석' }, { attendance: '결석' }, { attendance: '결석' },","      { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","      { attendance: '출석' },","    ];","    setAttendanceData(data);","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","        },","      ],","    });","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":167},{"start":{"row":0,"column":0},"end":{"row":106,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = ({ selectedSubject }) => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0], // 초기에 0으로 설정","        backgroundColor: [","          'rgba(75, 192, 192, 0.6)', // 출석","          'rgba(255, 99, 132, 0.6)', // 결석","          'rgba(255, 159, 64, 0.6)',  // 지각","        ],","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(`http://18.116.93.222:8000/api/attendance?subject=${encodeURIComponent(selectedSubject)}`);","      const data = await response.json();","","      setAttendanceData(data);","    } catch (error) {","      console.error(\"데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: [","            'rgba(75, 192, 192, 0.6)',  // 출석","            'rgba(255, 99, 132, 0.6)',  // 결석","            'rgba(255, 159, 64, 0.6)',  // 지각","          ],","        },","      ],","    });","  };","","  useEffect(() => {","    if (selectedSubject) {","      fetchAttendanceData(); // 과목이 선택되면 출석 데이터 불러오기","    }","  }, [selectedSubject]);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>출석 통계</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""]}],[{"start":{"row":0,"column":0},"end":{"row":106,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = ({ selectedSubject }) => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0], // 초기에 0으로 설정","        backgroundColor: [","          'rgba(75, 192, 192, 0.6)', // 출석","          'rgba(255, 99, 132, 0.6)', // 결석","          'rgba(255, 159, 64, 0.6)',  // 지각","        ],","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(`http://18.116.93.222:8000/api/attendance?subject=${encodeURIComponent(selectedSubject)}`);","      const data = await response.json();","","      setAttendanceData(data);","    } catch (error) {","      console.error(\"데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: [","            'rgba(75, 192, 192, 0.6)',  // 출석","            'rgba(255, 99, 132, 0.6)',  // 결석","            'rgba(255, 159, 64, 0.6)',  // 지각","          ],","        },","      ],","    });","  };","","  useEffect(() => {","    if (selectedSubject) {","      fetchAttendanceData(); // 과목이 선택되면 출석 데이터 불러오기","    }","  }, [selectedSubject]);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>출석 통계</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":168}],[{"start":{"row":0,"column":0},"end":{"row":85,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Pie } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  ArcElement,","  Tooltip,","  Legend,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 플러그인 및 요소 등록","ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);","","const SystemLogChart = ({ selectedSubject }) => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0], // 초기 데이터 설정","        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","      },","    ],","  });","","  // 출석 데이터를 가져오는 함수","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(`http://18.116.93.222:8000/api/attendance?subject=${encodeURIComponent(selectedSubject)}`);","      const data = await response.json();","","      // 출석, 결석, 지각 상태별 학생 이름 배열 생성","      const present = data.filter(student => student.attendance === '출석').map(student => student.stdName);","      const absent = data.filter(student => student.attendance === '결석').map(student => student.stdName);","      const late = data.filter(student => student.attendance === '지각').map(student => student.stdName);","","      // 출석 통계 계산","      const attendanceCount = { 출석: present.length, 결석: absent.length, 지각: late.length };","","      // 차트 데이터 업데이트","      setChartData({","        labels: ['출석', '결석', '지각'],","        datasets: [","          {","            label: '출석 통계',","            data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","            backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","          },","        ],","      });","","    } catch (error) {","      console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  useEffect(() => {","    if (selectedSubject) {","      fetchAttendanceData();","    }","  }, [selectedSubject]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>출석 통계</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Pie data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":169}],[{"start":{"row":0,"column":0},"end":{"row":85,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Pie } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  ArcElement,","  Tooltip,","  Legend,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 플러그인 및 요소 등록","ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);","","const SystemLogChart = ({ selectedSubject }) => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0], // 초기 데이터 설정","        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","      },","    ],","  });","","  // 출석 데이터를 가져오는 함수","  const fetchAttendanceData = async () => {","    try {","      const response = await fetch(`http://18.116.93.222:8000/api/attendance?subject=${encodeURIComponent(selectedSubject)}`);","      const data = await response.json();","","      // 출석, 결석, 지각 상태별 학생 이름 배열 생성","      const present = data.filter(student => student.attendance === '출석').map(student => student.stdName);","      const absent = data.filter(student => student.attendance === '결석').map(student => student.stdName);","      const late = data.filter(student => student.attendance === '지각').map(student => student.stdName);","","      // 출석 통계 계산","      const attendanceCount = { 출석: present.length, 결석: absent.length, 지각: late.length };","","      // 차트 데이터 업데이트","      setChartData({","        labels: ['출석', '결석', '지각'],","        datasets: [","          {","            label: '출석 통계',","            data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","            backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","          },","        ],","      });","","    } catch (error) {","      console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  useEffect(() => {","    if (selectedSubject) {","      fetchAttendanceData();","    }","  }, [selectedSubject]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>출석 통계</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Pie data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":170}],[{"start":{"row":0,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0, 0, 0, 0, 0, 0], // 초기에 0으로 설정","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    // 여기서는 예시로 직접 데이터를 사용합니다.","    try {","      // 실제 API 요청 코드로 대체할 수 있습니다.","      const data = [","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '결석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' },","      ];","","      console.log(\"불러온 출석 데이터:\", data);  // 데이터 확인","      setAttendanceData(data);  // 데이터를 상태로 설정","    } catch (error) {","      console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","        },","      ],","    });","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":171}],[{"start":{"row":0,"column":0},"end":{"row":103,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차', '8주차'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0, 0, 0, 0, 0, 0], // 초기에 0으로 설정","        backgroundColor: 'rgba(75, 192, 192, 0.6)',","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    // 여기서는 예시로 직접 데이터를 사용합니다.","    try {","      // 실제 API 요청 코드로 대체할 수 있습니다.","      const data = [","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '결석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' },","      ];","","      console.log(\"불러온 출석 데이터:\", data);  // 데이터 확인","      setAttendanceData(data);  // 데이터를 상태로 설정","    } catch (error) {","      console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","        },","      ],","    });","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]);","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":172}],[{"start":{"row":0,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0], // 초기에 0으로 설정","        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    try {","      // 예시로 데이터를 사용. 실제 API 호출로 변경 필요.","      const data = [","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '결석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' },","      ];","","      console.log(\"불러온 출석 데이터:\", data);  // 데이터 확인","      setAttendanceData(data);  // 데이터를 상태로 설정","    } catch (error) {","      console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    // attendanceData 배열을 순회하면서 출석 상태별 카운트","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","        },","      ],","    });","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]); // attendanceData가 변경될 때마다 차트 데이터 업데이트","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":173}],[{"start":{"row":0,"column":0},"end":{"row":103,"column":0},"action":"remove","lines":["import React, { useEffect, useState } from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const SystemLogChart = () => {","  const [attendanceData, setAttendanceData] = useState([]);","  const [chartData, setChartData] = useState({","    labels: ['출석', '결석', '지각'],","    datasets: [","      {","        label: '출석 통계',","        data: [0, 0, 0], // 초기에 0으로 설정","        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","      },","    ],","  });","","  // 출석 데이터를 불러오는 함수","  const fetchAttendanceData = async () => {","    try {","      // 예시로 데이터를 사용. 실제 API 호출로 변경 필요.","      const data = [","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '결석' },","        { attendance: '출석' }, { attendance: '결석' }, { attendance: '출석' },","        { attendance: '출석' },","      ];","","      console.log(\"불러온 출석 데이터:\", data);  // 데이터 확인","      setAttendanceData(data);  // 데이터를 상태로 설정","    } catch (error) {","      console.error(\"출석 데이터를 불러오는 중 오류 발생:\", error);","    }","  };","","  // 출석 통계 계산","  const loadChartData = () => {","    const attendanceCount = { 출석: 0, 결석: 0, 지각: 0 };","","    // attendanceData 배열을 순회하면서 출석 상태별 카운트","    attendanceData.forEach((attendance) => {","      if (attendance.attendance === '출석') {","        attendanceCount.출석 += 1;","      } else if (attendance.attendance === '결석') {","        attendanceCount.결석 += 1;","      } else if (attendance.attendance === '지각') {","        attendanceCount.지각 += 1;","      }","    });","","    // 차트 데이터 업데이트","    setChartData({","      labels: ['출석', '결석', '지각'],","      datasets: [","        {","          label: '출석 통계',","          data: [attendanceCount.출석, attendanceCount.결석, attendanceCount.지각],","          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 159, 64, 0.6)'],","        },","      ],","    });","  };","","  useEffect(() => {","    fetchAttendanceData();","  }, []);","","  useEffect(() => {","    if (attendanceData.length > 0) {","      loadChartData(); // 출석 데이터가 있으면 차트 업데이트","    }","  }, [attendanceData]); // attendanceData가 변경될 때마다 차트 데이터 업데이트","","  const options = {","    responsive: true,","    maintainAspectRatio: false,","  };","","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      {attendanceData.length === 0 ? (","        <p>출석 데이터를 불러오는 중입니다...</p>","      ) : (","        <Bar data={chartData} options={options} />","      )}","    </div>","  );","};","","export default SystemLogChart;",""],"id":174}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["import React from 'react';","import { Bar } from 'react-chartjs-2';","import {","  Chart as ChartJS,","  CategoryScale,","  LinearScale,","  BarElement,","  Title,","  Tooltip,","  Legend,","} from 'chart.js';","import '../styles/SystemLogChart.css';","","// 필요한 스케일 및 플러그인 등록","ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);","","const data = {","  labels: ['1주차', '2주차', '3주차', '4주차', '5주차', '6주차', '7주차','8주차'],","  datasets: [","    {","      label: '접속 수',","      data: [12, 19, 3, 5, 2, 3, 9, 7,5],","      backgroundColor: 'rgba(75, 192, 192, 0.6)',","    },","  ],","};","","const options = {","  responsive: true,","  maintainAspectRatio: false, // 비율 유지하지 않음","};","","function SystemLogChart() {","  return (","    <div className=\"system-log-chart\">","      <h4>System Log</h4>","      <Bar data={data} options={options} />","    </div>","  );","}","","export default SystemLogChart;",""],"id":175}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":23,"column":6},"end":{"row":23,"column":6},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1731603865786,"hash":"0a3d69e13f1cb94934c2f1f0ee0bf34eb16e2660"}