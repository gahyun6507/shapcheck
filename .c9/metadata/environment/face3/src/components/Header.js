{"filter":false,"title":"Header.js","tooltip":"/face3/src/components/Header.js","undoManager":{"mark":15,"position":15,"stack":[[{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":["/"],"id":162},{"start":{"row":3,"column":1},"end":{"row":3,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"insert","lines":[" "],"id":163}],[{"start":{"row":49,"column":43},"end":{"row":50,"column":12},"action":"insert","lines":["","            "],"id":164}],[{"start":{"row":50,"column":12},"end":{"row":50,"column":71},"action":"insert","lines":["<p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>"],"id":165}],[{"start":{"row":50,"column":51},"end":{"row":50,"column":57},"action":"remove","lines":["크로스플랫폼"],"id":166},{"start":{"row":50,"column":51},"end":{"row":50,"column":57},"action":"insert","lines":["크로스플랫폼"]},{"start":{"row":50,"column":51},"end":{"row":50,"column":57},"action":"remove","lines":["크로스플랫폼"]},{"start":{"row":50,"column":51},"end":{"row":50,"column":52},"action":"insert","lines":["ㅈ"]}],[{"start":{"row":50,"column":51},"end":{"row":50,"column":52},"action":"remove","lines":["ㅈ"],"id":167},{"start":{"row":50,"column":51},"end":{"row":50,"column":52},"action":"insert","lines":["전"]}],[{"start":{"row":50,"column":52},"end":{"row":50,"column":53},"action":"insert","lines":["체"],"id":168}],[{"start":{"row":50,"column":57},"end":{"row":50,"column":62},"action":"remove","lines":["크로스플랫"],"id":169},{"start":{"row":50,"column":57},"end":{"row":50,"column":62},"action":"insert","lines":["크로스플랫"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":62},"action":"remove","lines":["크로스플랫"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"insert","lines":["ㅈ"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"remove","lines":["ㅈ"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"insert","lines":["저"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"remove","lines":["저"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"insert","lines":["전"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"remove","lines":["전"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"insert","lines":["전"]}],[{"start":{"row":50,"column":58},"end":{"row":50,"column":59},"action":"insert","lines":["체"],"id":170},{"start":{"row":50,"column":59},"end":{"row":50,"column":60},"action":"remove","lines":["폼"]}],[{"start":{"row":13,"column":0},"end":{"row":94,"column":0},"action":"insert","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate } from 'react-router-dom';  // useNavigate 훅 추가","import '../styles/Header.css';","// import DataTable from './DataTable'; // DataTable 컴포넌트 임포트","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체') {","      setSelectedSubjectState('');  // 전체 선택 시 과목 상태를 초기화","    } else {","      setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' ? '' : subject);  // 부모 컴포넌트에 선택된 과목 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            <p onClick={() => handleSubjectSelect('전체')}>전체</p> {/* 전체 선택 */}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""],"id":171}],[{"start":{"row":0,"column":0},"end":{"row":157,"column":0},"action":"remove","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate } from 'react-router-dom';  // useNavigate 훅 추가","import '../styles/Header.css';","// import DataTable from './DataTable'; // DataTable 컴포넌트 임포트","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","import React, { useState, useRef, useEffect } from 'react';","import { useNavigate } from 'react-router-dom';  // useNavigate 훅 추가","import '../styles/Header.css';","// import DataTable from './DataTable'; // DataTable 컴포넌트 임포트","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체') {","      setSelectedSubjectState('');  // 전체 선택 시 과목 상태를 초기화","    } else {","      setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' ? '' : subject);  // 부모 컴포넌트에 선택된 과목 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            <p onClick={() => handleSubjectSelect('전체')}>전체</p> {/* 전체 선택 */}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    if (setSelectedSubject) {","      setSelectedSubject(subject);  // 선택된 과목을 부모 컴포넌트에 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            <p onClick={() => handleSubjectSelect('전체')}>전체</p>","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""],"id":172},{"start":{"row":0,"column":0},"end":{"row":81,"column":0},"action":"insert","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate } from 'react-router-dom';  // useNavigate 훅 추가","import '../styles/Header.css';","// import DataTable from './DataTable'; // DataTable 컴포넌트 임포트","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체') {","      setSelectedSubjectState('');  // 전체 선택 시 과목 상태를 초기화","    } else {","      setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' ? '' : subject);  // 부모 컴포넌트에 선택된 과목 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            <p onClick={() => handleSubjectSelect('전체')}>전체</p> {/* 전체 선택 */}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""]}],[{"start":{"row":0,"column":0},"end":{"row":81,"column":0},"action":"remove","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate } from 'react-router-dom';  // useNavigate 훅 추가","import '../styles/Header.css';","// import DataTable from './DataTable'; // DataTable 컴포넌트 임포트","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체') {","      setSelectedSubjectState('');  // 전체 선택 시 과목 상태를 초기화","    } else {","      setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' ? '' : subject);  // 부모 컴포넌트에 선택된 과목 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            <p onClick={() => handleSubjectSelect('전체')}>전체</p> {/* 전체 선택 */}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""],"id":173},{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate, useLocation } from 'react-router-dom';  // useLocation 훅 추가","import '../styles/Header.css';","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","  const location = useLocation();  // 현재 경로를 가져오는 훅","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체' && location.pathname === '/attendance-records') {","      setSelectedSubjectState('');  // 전체 선택 시 과목 상태를 초기화","    } else {","      setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' && location.pathname === '/attendance-records' ? '' : subject);  // 부모 컴포넌트에 선택된 과목 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            {/* 경로가 '/attendance-records'일 때만 전체 선택 가능 */}","            {location.pathname === '/attendance-records' && (","              <p onClick={() => handleSubjectSelect('전체')}>전체</p>","            )}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""]}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate, useLocation } from 'react-router-dom';  // useLocation 훅 추가","import '../styles/Header.css';","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]); // 출석 데이터 상태","  const [selectedSubject, setSelectedSubjectState] = useState(''); // 선택된 과목 상태 추가","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();  // useNavigate 훅 사용","  const location = useLocation();  // 현재 경로를 가져오는 훅","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체' && location.pathname === '/attendance-records') {","      setSelectedSubjectState('');  // 전체 선택 시 과목 상태를 초기화","    } else {","      setSelectedSubjectState(subject);  // 선택된 과목 상태 업데이트","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' && location.pathname === '/attendance-records' ? '' : subject);  // 부모 컴포넌트에 선택된 과목 전달","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","   const handleLoginClick = () => {","    navigate('/login');  // 로그인 버튼 클릭 시 '/login' 경로로 이동","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            {/* 경로가 '/attendance-records'일 때만 전체 선택 가능 */}","            {location.pathname === '/attendance-records' && (","              <p onClick={() => handleSubjectSelect('전체')}>전체</p>","            )}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""],"id":174},{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate, useLocation } from 'react-router-dom';","import '../styles/Header.css';","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]);","  const [selectedSubject, setSelectedSubjectState] = useState('');","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();","  const location = useLocation();","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체' && location.pathname === '/attendance-records') {","      setSelectedSubjectState('');","    } else {","      setSelectedSubjectState(subject);","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' && location.pathname === '/attendance-records' ? '' : subject);","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","  const handleLoginClick = () => {","    navigate('/login');","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            {location.pathname === '/attendance-records' && (","              <p onClick={() => handleSubjectSelect('전체')}>전체</p>","            )}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""]}],[{"start":{"row":2,"column":30},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":175}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":36},"action":"insert","lines":["import DataTable from './DataTable';"],"id":176}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate, useLocation } from 'react-router-dom';","import '../styles/Header.css';","import DataTable from './DataTable';","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const [attendanceData, setAttendanceData] = useState([]);","  const [selectedSubject, setSelectedSubjectState] = useState('');","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();","  const location = useLocation();","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체' && location.pathname === '/attendance-records') {","      setSelectedSubjectState('');","    } else {","      setSelectedSubjectState(subject);","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' && location.pathname === '/attendance-records' ? '' : subject);","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","  const handleLoginClick = () => {","    navigate('/login');","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            {location.pathname === '/attendance-records' && (","              <p onClick={() => handleSubjectSelect('전체')}>전체</p>","            )}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""],"id":177},{"start":{"row":0,"column":0},"end":{"row":81,"column":0},"action":"insert","lines":["import React, { useState, useRef, useEffect } from 'react';","import { useNavigate, useLocation } from 'react-router-dom';","import '../styles/Header.css';","","function Header({ setSelectedSubject }) {","  const [isProfileOpen, setIsProfileOpen] = useState(false);","  const [isSearchFocused, setIsSearchFocused] = useState(false);","  const profileRef = useRef(null);","  const searchRef = useRef(null);","  const navigate = useNavigate();","  const location = useLocation();","","  const handleClickOutside = (e) => {","    if (profileRef.current && !profileRef.current.contains(e.target)) {","      setIsProfileOpen(false);","    }","    if (searchRef.current && !searchRef.current.contains(e.target)) {","      setIsSearchFocused(false);","    }","  };","","  const handleSubjectSelect = async (subject) => {","    if (subject === '전체' && location.pathname === '/attendance-records') {","      setSelectedSubject('');  // 수정된 부분: setSelectedSubject 사용","    } else {","      setSelectedSubject(subject);  // 수정된 부분: setSelectedSubject 사용","    }","","    if (setSelectedSubject) {","      setSelectedSubject(subject === '전체' && location.pathname === '/attendance-records' ? '' : subject);","    }","  };","","  useEffect(() => {","    document.addEventListener('mousedown', handleClickOutside);","    return () => document.removeEventListener('mousedown', handleClickOutside);","  }, []);","  ","  const handleLoginClick = () => {","    navigate('/login');","  };","","  return (","    <header className=\"header\">","      <div className=\"search-container\" ref={searchRef}>","        <input","          type=\"text\"","          placeholder=\"Search...\"","          className=\"search-bar\"","          onFocus={() => setIsSearchFocused(true)}","        />","        {isSearchFocused && (","          <div className=\"search-dropdown\">","            {location.pathname === '/attendance-records' && (","              <p onClick={() => handleSubjectSelect('전체')}>전체</p>","            )}","            <p onClick={() => handleSubjectSelect('크로스플랫폼')}>크로스플랫폼</p>","            <p onClick={() => handleSubjectSelect('캡스톤')}>캡스톤</p>","            <p onClick={() => handleSubjectSelect('쿠버네티스')}>쿠버네티스</p>","          </div>","        )}","      </div>","      <div className=\"icons\">","        <span className=\"icon\">🔔</span>","        <span className=\"icon\" onClick={() => setIsProfileOpen(!isProfileOpen)}>👤</span>","      </div>","      {isProfileOpen && (","        <div className=\"profile-dropdown\" ref={profileRef}>","          <div className=\"profile-info\">","            <span className=\"profile-icon\">👤</span>","            <p>반갑습니다, OOO님</p>","          </div>","          <button className=\"profile-btn\" onClick={handleLoginClick}>로그인</button>","          <button className=\"profile-btn\">로그아웃</button>","        </div>","      )}","    </header>","  );","}","","export default Header;",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":81,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1731553167009,"hash":"3c3c2302be6f8927bfdadb0676ffa3d2e9ddeec9"}